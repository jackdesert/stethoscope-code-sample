###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:stethoscope

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

sqlalchemy.url = sqlite:///%(here)s/stethoscope.sqlite

retry.attempts = 3

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
listen = localhost:6540

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[uwsgi]
chdir = /home/ubuntu/stethoscope
wsgi-file = wsgi.py
callable = app
processes = 2
threads = 2
offload-threads = 2
stats =  127.0.0.1:9191
max-requests = 5000
master = True
vacuum = True
enable-threads = true
harakiri = 60
logto = /var/log/uwsgi/%n.log
chmod-socket = 020
plugin = python3
#runtime_dir = /run/uwsgi
pidfile=%(chdir)/tmp/%n.pid
socket = %(chdir)/tmp/%n.sock
virtualenv = %(chdir)/env
uid = ubuntu
gid = www-data


[pshell]
NeuralNetwork = stethoscope.models.NeuralNetwork
NeuralNetworkHelper = stethoscope.models.NeuralNetworkHelper
RssiReading = stethoscope.models.RssiReading
TrainingRun = stethoscope.models.TrainingRun



[loggers]
keys = root, stethoscope, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_stethoscope]
level = WARN
handlers =
qualname = stethoscope

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = DEBUG" logs SQL queries and results.
# "level = INFO" logs SQL queries.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
